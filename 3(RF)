import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

# Load the dataset
data = pd.read_csv('Advertising.csv')

# Convert 'sales' to a binary classification problem (high vs. low sales)
data['High_Sales'] = (data['sales'] >data['sales'].median()).astype(int)
features = ['TV', 'radio', 'newspaper']

# Define features and target
X = data[features]
y = data['High_Sales']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Define different numbers of trees to test
ntrees = [10, 50, 100, 200, 500]
accu_score=[]
pres_score=[]
rec_score=[]
f1score=[]

for n in ntrees:
    rf_clf=RandomForestClassifier(n_estimators=n,random_state=42)
    rf_clf.fit(X_train,y_train)

    y_pred=rf_clf.predict(X_test)
    
    acc=accuracy_score(y_test, y_pred)
    pr=precision_score(y_test, y_pred,average='weighted')
    rec=recall_score(y_test, y_pred,average='weighted')
    f1=f1_score(y_test, y_pred,average='weighted')

    accu_score.append(acc)
    pres_score.append(pr)
    rec_score.append(rec)
    f1score.append(f1)

    print(f'No of trees: {n}')
    print(f'Accuracy: {acc:.2f}')
    print(f'Precision: {pr:.2f}')
    print(f'Recall: {rec:.2f}')
    print(f'F1_score: {f1:.2f}')
    print("-----------------")

plt.figure(figsize=(6,6))
plt.plot(ntrees,accu_score,label='Accuracy',marker='o')
plt.plot(ntrees,pres_score,label='Precision',marker='.')
plt.plot(ntrees,rec_score,label='Recall',marker='d')
plt.plot(ntrees,f1score,label='F1',marker='s')
plt.xlabel("No of trees")
plt.ylabel("Score")
plt.title("Rrandom forest classifoer Breast Cancer Dataset")
plt.legend()
plt.grid(True)
plt.show()
